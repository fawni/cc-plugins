(function(s,g,f,b,x,p,v){"use strict";function h(e){if(e&&e.__esModule)return e;var o=Object.create(null);return e&&Object.keys(e).forEach(function(n){if(n!=="default"){var t=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(o,n,t.get?t:{enumerable:!0,get:function(){return e[n]}})}}),o.default=e,Object.freeze(o)}var a=h(g),q=()=>s.injectCSS('[class*=blockquote].greentext{display:block}[class*=blockquote].greentext blockquote{padding:0}[class*=blockquote].greentext blockquote:before{content:">"}.greentext{color:#b3c45e}');const l=f.webpack.findByDisplayName("SwitchItem");var y=({persist:e})=>(b.useNest(e),a.createElement("div",{className:"greentext_grid"},a.createElement(l,{note:"Convert text preceded by '>' to greentext",value:e.ghost.text??!0,onChange:o=>e.store.text=o},"Convert Text"),a.createElement(l,{note:"Convert blockquotes to greentext",value:e.ghost.quote??!0,onChange:o=>e.store.quote=o},"Convert Quotes")));let i,m;const C=x.find(e=>e.type?.displayName==="MessageContent");var k=({persist:e})=>({onLoad(){e.ghost.text==null&&(e.store.text=!0),e.ghost.quote==null&&(e.store.quote=!0),m=q(),i=s.after("type",C,(o,n)=>{const t=n.props?.children[0];for(const r in t)if(e.ghost.text&&typeof t[r]=="string"){const c=t[r].split(`
`);let d=!1;for(const u in c)typeof c[u]!="string"||!c[u].startsWith(">")||(c[u]=p.React.createElement("div",{className:"greentext"},c[u]),d=!0);d===!0&&(t[r]=c)}else e.ghost.quote&&t[r]?.props?.className?.includes("blockquoteContainer")&&(t[r].props.className+=" greentext");return n})},onUnload(){i(),m()},settings:v.createElement(y,{persist:e})});return k})(cumcord.patcher,cumcord.modules.common.React,cumcord.modules,cumcord.utils,cumcord.modules.webpack,cumcord.modules.common,cumcord.modules.common.React);

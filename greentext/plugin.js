(function(g,m,c,x,f,h){"use strict";var b=()=>cumcord.patcher.injectCSS('[class*=blockquote].greentext{display:block}[class*=blockquote].greentext blockquote{padding:0}[class*=blockquote].greentext blockquote:before{content:">"}.greentext{color:#b3c45e}');const s=g.webpack.findByDisplayName("SwitchItem");var v=({persist:e})=>(m.useNest(e),c.React.createElement("div",{className:"greentext_grid"},c.React.createElement(s,{note:"Convert text preceded by '>' to greentext",value:e.ghost.text??!0,onChange:r=>e.store.text=r},"Convert Text"),c.React.createElement(s,{note:"Convert blockquotes to greentext",value:e.ghost.quote??!0,onChange:r=>e.store.quote=r},"Convert Quotes")));let u,l;const p=f.find(e=>e.type?.displayName==="MessageContent");var q=({persist:e})=>({onLoad(){e.ghost.text==null&&(e.store.text=!0),e.ghost.quote==null&&(e.store.quote=!0),l=b(),u=x.after("type",p,(r,d)=>{const t=d.props?.children[0];for(const n in t)if(e.ghost.text&&typeof t[n]=="string"){const o=t[n].split(`
`);let i=!1;for(const a in o)typeof o[a]!="string"||!o[a].startsWith(">")||(o[a]=c.React.createElement("div",{className:"greentext"},o[a]),i=!0);i===!0&&(t[n]=o)}else e.ghost.quote&&t[n]?.props?.className?.includes("blockquoteContainer")&&(t[n].props.className+=" greentext");return d})},onUnload(){u(),l()},settings:h.createElement(v,{persist:e})});return q})(cumcord.modules,cumcord.utils,cumcord.modules.common,cumcord.patcher,cumcord.modules.webpack,cumcord.modules.common.React);

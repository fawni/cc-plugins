(function(i,g,c,m,x,h){"use strict";var f=()=>cumcord.patcher.injectCSS('[class*=blockquote].greentext{display:block}[class*=blockquote].greentext blockquote{padding:0}[class*=blockquote].greentext blockquote:before{content:">"}.greentext{color:#b3c45e}');const a=i.webpack.findByDisplayName("SwitchItem");var b=({persist:e})=>(g.useNest(e),c.React.createElement("div",{className:"greentext_grid"},c.React.createElement(a,{note:"Convert text preceded by '>' to greentext",value:e.ghost.text??!0,onChange:r=>e.store.text=r},"Convert Text"),c.React.createElement(a,{note:"Convert blockquotes to greentext",value:e.ghost.quote??!0,onChange:r=>e.store.quote=r},"Convert Quotes")));let u,l;const v=x.find(e=>e.type?.displayName==="MessageContent");var p=({persist:e})=>({onLoad(){e.ghost.text==null&&(e.store.text=!0),e.ghost.quote==null&&(e.store.quote=!0),l=f(),u=m.after("type",v,(r,d)=>{const t=d.props.children[0];for(const n in t)if(e.ghost.text&&typeof t[n]=="string"){const o=t[n].split(`
`);for(const s in o)typeof o[s]!="string"||!o[s].startsWith(">")||(o[s]=c.React.createElement("div",{className:"greentext"},o[s]));t[n]=o}else e.ghost.quote&&t[n].props?.className?.includes("blockquoteContainer")&&(t[n].props.className+=" greentext");return d})},onUnload(){u(),l()},settings:h.createElement(b,{persist:e})});return p})(cumcord.modules,cumcord.utils,cumcord.modules.common,cumcord.patcher,cumcord.modules.webpack,cumcord.modules.common.React);
